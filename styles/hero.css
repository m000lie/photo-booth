/*-- -------------------------- -->
<---            Hero            -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  #hero-1800 {
    /* 200px - 244px top */
    /* 60px - 100px  bottom */
    padding: clamp(12.5rem, 16.82vw, 15.25rem) 1rem 0;
    /* clips the svg wave from overflowing */
    overflow: hidden;
    position: relative;
    z-index: 1;
    background-color: #F2FAF8;
  }

  #hero-1800 .cs-container {
    width: 100%;
    max-width: 80rem;
    margin: auto auto 0.5rem auto;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    gap: 3rem;
    
  }

  #hero-1800 .cs-content {
    text-align: center;
    max-width: 39.375rem;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    position: relative;
    z-index: 2;
  }

  #hero-1800 .cs-topper {
    font-size: 1rem;
    line-height: 1.2em;
    text-transform: uppercase;
    text-align: inherit;
    letter-spacing: 0.1em;
    font-weight: 700;
    color: var(--primary);
    margin-bottom: 0.25rem;
    display: block;
  }

  #hero-1800 .cs-title {
    /* 39px - 84px */
    font-size: clamp(2.4375rem, 6.3vw, 5.25rem);
    font-weight: 900;
    line-height: 1.2em;
    text-align: inherit;
    /* 23 characters including spaces wide */
    max-width: 23ch;
    margin: 0 0 1rem 0;
    color: var(--headerColor);
    position: relative;
  }

  #hero-1800 .cs-text {
    /* 16px - 20px */
    font-size: clamp(1rem, 1.5vw, 1.25rem);
    line-height: 1.5em;
    text-align: inherit;
    width: 100%;
    max-width: 33.1875rem;
    margin: 0 0 2rem 0;
    color: var(--bodyTextColor);
  }

  #hero-1800 .cs-button-solid {
    font-size: 1rem;
    /* 46px - 56px */
    line-height: clamp(2.875rem, 5.5vw, 3.5rem);
    text-decoration: none;
    font-weight: 700;
    text-align: center;
    margin: 0;
    color: #fff;
    min-width: 9.375rem;
    padding: 0 1.5rem;
    background-color: var(--primary);
    border-radius: 0.75rem;
    display: inline-block;
    position: relative;
    z-index: 1;
    /* prevents padding from adding to the width */
    box-sizing: border-box;
  }

  #hero-1800 .cs-button-solid:before {
    content: '';
    position: absolute;
    height: 100%;
    width: 0%;
    background: #000;
    opacity: 1;
    top: 0;
    left: 0;
    z-index: -1;
    border-radius: 0.25rem;
    transition: width 0.3s;
  }

  #hero-1800 .cs-button-solid:hover:before {
    width: 100%;
  }

  #hero-1800 .cs-image-group {
    /* font size scaling. Everything inside the group is in ems so they pull their value for em from the parent (this group div) and when the font is set to a vw, it scales the whole section down and grows proportionally with the screen width, stopping at the final em value declared in the second slot for the min function. */
    font-size: min(2.25vw, .83em);
    width: 40.75em;
    min-height: 45em;
    display: flex;
    justify-content: center;
    position: relative;
    z-index: 1;
    
  }

  #hero-1800 .cs-picture {
    width: 33.875em;
    /* height: auto; */
    border-radius: 15.625em;
    border: 0.625em solid #ffd3c6;
    background-color: #FFD3C6;
    overflow: hidden;
    display: block;
    position: relative;
  }

  #hero-1800 .cs-picture img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    position: absolute;
    top: 0;
    left: 0;
  }

  #hero-1800 .cs-oval {
    width: 45.4375em;
    height: auto;
    position: absolute;
    top: 50%;
    left: 50%;
    z-index: -1;
    transform: translate(-50%, -50%) rotate(38deg);
  }

  #hero-1800 .cs-box {
    text-align: center;
    width: auto;
    /* 16px - 40px */
    padding: clamp(1em, 3vw, 2.5em) clamp(2.5em, 5vw, 4em);
    /* padding-bottom: 1rem; */
    display: inline-flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    position: absolute;
    left: 0;
    bottom: 3.75em;
    z-index: 10;
  }

  #hero-1800 .cs-blob {
    width: 100%;
    height: auto;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  #hero-1800 .cs-number {
    /* 24px - 49px */
    font-size: clamp(1.25rem, 4.3vw, 3.0625rem);
    line-height: 1.2em;
    font-weight: 900;
    margin: 0;
    color: var(--secondary);
    display: block;
    z-index: 10;
  }

  #hero-1800 .cs-desc {
    /* 12px - 16px */
    font-size: clamp(0.75rem, 1.5vw, 1rem);
    line-height: 1.5em;
    text-align: inherit;
    font-weight: bold;
    width: 100%;
    max-width: 20ch;
    color: var(--bodyTextColor);
    position: relative;
    z-index: 10;
  }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
  #hero-1800 .cs-container {
    flex-direction: row;
    align-items: stretch;
    justify-content: space-between;
  }

  #hero-1800 .cs-content {
    text-align: left;
    width: 47%;
    /* 168px - 300pxm this maintains consistent space between the cs content and the cs-box so no matter how much content you add here, there will always be X amount of padding between the bottom of the cs-content and the bottom of the cs-video-group */
    padding-bottom: clamp(10.5rem, 30vw, 18.75rem);
    flex: none;
    align-items: flex-start;
    align-self: flex-start;
  }

  #hero-1800 .cs-title {
    max-width: 10ch;
  }

  #hero-1800 .cs-box {
    width: 80%;
    max-width: 19.1875rem;
    flex-direction: column;
    position: absolute;
    /* chnages to 48px at desktop */
    bottom: 0;
    /* -112px to 200px */
    left: calc(clamp(7.25rem, 17vw, 12.5rem) * -1);
  }
  #hero-1800 .cs-image-group {
    font-size: min(1.3vw, 1em);
    height: 65em;
    /* sends it to the right in the 2nd position */
    order: 2;
  }
}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
  #hero-1800 .cs-video-wrapper {
    height: 100%;
    clip-path: inset(0 0 6.3rem 0);
  }

  #hero-1800 .cs-box {
    bottom: 6.3rem;
  }
  #hero-1800 .cs-image-group {
    font-size: min(1.2vw, 1em);
    /* sends it to the right in the 2nd position */
    order: 2;
  }
}

/*-- -------------------------- -->
  <---          Services          -->
  <--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  #services-1800 {
    padding: var(--sectionPadding);
    position: relative;
  }

  #services-1800 .cs-container {
    width: 100%;
    max-width: 80rem;
    margin: auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: clamp(3rem, 6vw, 4rem);
  }

  #services-1800 .cs-content {
    /* set text align to left if content needs to be left aligned */
    text-align: center;
    width: 100%;
    display: flex;
    flex-direction: column;
    /* centers content horizontally, set to flex-start to left align */
    align-items: center;
  }

  #services-1800 .cs-title {
    max-width: 25ch;
  }

  #services-1800 .cs-button-solid {
    font-size: 1rem;
    /* 46px - 56px */
    line-height: clamp(2.875rem, 5.5vw, 3.5rem);
    text-decoration: none;
    font-weight: 700;
    text-align: center;
    margin: 0;
    color: #fff;
    min-width: 9.375rem;
    padding: 0 1.5rem;
    background-color: var(--primary);
    border-radius: 0.25rem;
    display: inline-block;
    position: relative;
    z-index: 1;
    /* prevents padding from adding to the width */
    box-sizing: border-box;
  }

  #services-1800 .cs-button-solid:before {
    content: '';
    position: absolute;
    height: 100%;
    width: 0%;
    background: #000;
    opacity: 1;
    top: 0;
    left: 0;
    z-index: -1;
    border-radius: 0.25rem;
    transition: width 0.3s;
  }

  #services-1800 .cs-button-solid:hover:before {
    width: 100%;
  }

  #services-1800 .cs-card-group {
    width: 100%;
    margin: 0;
    padding: 0;
    display: grid;
    align-items: stretch;
    grid-template-columns: repeat(12, 1fr);
    /* 16px - 20px */
    gap: clamp(1rem, 2vw, 1.25rem);
  }

  #services-1800 .cs-item {
    text-align: center;
    list-style: none;
    width: 100%;
    /* 240px - 320px */
    height: clamp(15rem, 40vw, 20rem);
    margin: 0;
    /* prevents padding and border from affecting height and width */
    box-sizing: border-box;
    padding: 0;
    background-color: #000;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: flex-start;
    grid-column: span 12;
    grid-row: span 1;
    position: relative;
    z-index: 1;
    overflow: hidden;
  }

  #services-1800 .cs-item:hover .cs-background:before {
    opacity: 0.8;
  }

  #services-1800 .cs-item:hover .cs-background img {
    transform: scale(1.2);
  }

  #services-1800 .cs-link {
    text-decoration: none;
    width: 100%;
    height: 100%;
    /* padding goes on the link, not the cs-item as is normal. We do this because we want the whole card to be hoverable. So we add the padding to the link tag to create the space inside the card. By adding the space inside the cs-link tag we can make the whole card hoverable since the padding is now contributing to the height and width of the link */
    /* 16px - 32px */
    padding: clamp(1rem, 3vw, 2rem);
    /* prevents padding from affecting height and width */
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: flex-start;
  }

  #services-1800 .cs-number {
    font-size: 5.25rem;
    font-weight: 900;
    color: rgba(0, 0, 0, 0);
    opacity: 100%;
    position: absolute;
    /* 16px - 32px */
    right: clamp(1rem, 3vw, 2rem);
    bottom: clamp(1rem, 3vw, 2rem);
    transition: opacity 0.3s, top 0.3s;
    -webkit-text-stroke-width: 1px;
    -webkit-text-stroke-color: var(--bodyTextColorWhite);
  }

  #services-1800 .cs-h3 {
    /* 25px - 31px */
    font-size: clamp(1.5625rem, 2.5vw, 1.9375rem);
    font-weight: 700;
    line-height: 1.2em;
    text-align: inherit;
    margin: 0;
    color: var(--bodyTextColorWhite);
  }

  #services-1800 .cs-background {
    width: 100%;
    height: 100%;
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
  }

  #services-1800 .cs-background:before {
    /* background color overlay */
    content: '';
    width: 100%;
    height: 100%;
    background-color: #000;
    opacity: 0.4;
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    z-index: 1;
    transition: background-color 0.3s, opacity 0.3s;
  }

  #services-1800 .cs-background img {
    width: 100%;
    height: 100%;
    /* Makes img tag act as a background image */
    object-fit: cover;
    position: absolute;
    top: 0;
    left: 0;
    transition: transform 0.6s;
  }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
  #services-1800 {
    /* 32px - 48px */
    padding-top: clamp(2rem, 4vw, 3rem);
  }

  #services-1800 .cs-content {
    text-align: left;
    flex-direction: row;
    justify-content: space-between;
    align-items: flex-end;
  }

  #services-1800 .cs-item {
    grid-column: span 4;
  }
}